// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios15.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AntifraudSDK
import AVFoundation
import CocoaLumberjack
import CoreLocation
import Foundation
import MachO
import Network
import NetworkExtension
import Security
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import shared
@_hasMissingDesignatedInitializers public class SafeSDK {
  public static let sharedSafeSDK: AntifraudSDK.SafeSDK
  public func initialize(apiBaseUrl: Swift.String, apiKey: Swift.String, authTokenUrl: Swift.String, clientId: Swift.String, clientSecret: Swift.String, params: [Swift.String : Any]? = nil)
  public func check(checkCompletion: @escaping (Swift.Result<AntifraudSDK.Action, AntifraudSDK.SDKError>) -> Swift.Void)
  public func setUserId(_ userId: Swift.String)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class DeviceSeedManager {
  @objc deinit
}
public struct Location {
}
@_hasMissingDesignatedInitializers public class Action {
  public var actionType: AntifraudSDK.ActionType
  public var signature: Swift.String
  @objc deinit
}
public enum ActionType {
  case block, limitAccess, monitor, notSafe, safe
  public static func == (a: AntifraudSDK.ActionType, b: AntifraudSDK.ActionType) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum SDKError : Swift.String, Swift.Error {
  case networkConnection, serverError, locationPermissionUnknown, locationPermissionNotDetermined, locationPermissionDenied, locationServicesDisabled, locationNotAvailable, notInitialized, unknownError, unknownApiError, noActiveApiKey, noRecipeFoundFailure, noChecksAvailableFailure, emptyCheckConfigurationFailure, cannotNavigateToProcMapsFailure
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension AntifraudSDK.ActionType : Swift.Equatable {}
extension AntifraudSDK.ActionType : Swift.Hashable {}
extension AntifraudSDK.SDKError : Swift.Equatable {}
extension AntifraudSDK.SDKError : Swift.Hashable {}
extension AntifraudSDK.SDKError : Swift.RawRepresentable {}
